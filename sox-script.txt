
parse midi or generate instructions during def compile

will need event information such as duration pitch velocity
and also lyrics
should be equal lyrics to events used
will get the event time and measure length to next lyrics event
if any noteOn event happen at same time then add to SSML

follow lyrics events
will need to support tempo changes and multiple pitches at the same time

initial restriction will be a fixed tempo in tempo track and one noteOn per lyric

[a, test, lyric,] lyric
[4, 6, 2] duration
[34,40, 42] absolute time, will subtract actual length of audio by this
and then prepend a silence on first lyric if greater than 0
amd then when track ends take absolute time for final lyric
--a--, test--, lyric--

this is for initial audio syllable
likely will be SSML
not recommended altering audio speed within sox or DAW, quality is low

after getting audio will need to get the duration with silence included
either previous or after





generate audio file
split file into syllables
pad syllables with silence and also add silence for sustains and silence
concatnate audio files with wild syllables*.wav
open in daw and render file with midi or optionally create file with fluidsynth
then merge in sox with -m




above period parameters
min duration of sound before silence removal is stopped, 
what is minimum length of sound, short noises will be ignored
maybe keep at 200 ms


second is what volume will be considered silence, 0 is pure silence


below period parameters
max duration of silence before sound copy is stopped, 
this can be kept short is wanting to remove all silence


second is what volume will be considered silence, 0 is pure silence


sox -V3 dododo.wav dosplit.wav \
silence 1 0:0.1 0% 1 0:0.2 0% : newfile : restart


sox -V3 dododo.wav dosplit.wav reverse silence 1 0:0.1 0% 1 0:0.1 0% \
&& sox -V3 dosplit.wav dosplit.wav reverse silence 1 0:0.1 0% 1 0:0.1 0%



position
    A position within the audio stream; the syntax is [=|+|-]timespec, 
    where timespec is a time specification (see below). 
    The optional first character indicates 
    whether the timespec is to be interpreted relative to the start (=) or end (-) of audio, 
    or to the previous position if the effect accepts multiple position arguments (+). 
    The audio length must be known for end-relative locations to work; 
    some effects do accept -0 for end-of-audio, though, 
    even if the length is unknown. Which of =, +, - is the default depends on the effect 
    and is shown in its syntax as, e.g., position(+).

    Examples: =2:00 (two minutes into the audio stream), 
    -100s (one hundred samples before the end of audio), 
    +0:12+10s (twelve seconds and ten samples after the previous position), 
    -0.5+1s (one sample less than half a second before the end of audio).
